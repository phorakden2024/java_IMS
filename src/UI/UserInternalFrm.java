/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package UI;

import DAO.UserDao;
import DTO.UserDto;
import common.CommonUtil;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Da Phadenphorakden
 */
public class UserInternalFrm extends javax.swing.JInternalFrame {

    /**
     * Creates new form UserInternalFrm
     */
    UserDao dao = new UserDao();

    public UserInternalFrm() throws Exception {
        initComponents();
        //set full row selection
        this.jTable1.setCellSelectionEnabled(false);
        this.jTable1.setRowSelectionAllowed(true);

        //get all user from table
        List<UserDto> result = dao.loadAllUsers();
        this.showUsers(result);

    }

    void showUsers(List<UserDto> users) {
        //insert into jtable
        DefaultTableModel tbl = (DefaultTableModel) this.jTable1.getModel();
        tbl.setRowCount(0);//clear
        for (UserDto dto : users) {
            tbl.addRow(new Object[]{dto.getUid(), dto.getUname(), dto.getUpass(), dto.getIs_active()});
        }
        if (tbl.getRowCount() > 0) {
            this.jTable1.setRowSelectionInterval(0, 0);
        }
    }

    public void setEnableMenuButton(Boolean val) {
        this.btnAddNew.setEnabled(val);
        this.btnEdit.setEnabled(val);
        this.btnDelete.setEnabled(val);
        this.btnSearch.setEnabled(val);

        this.jTable1.setEnabled(val);
    }

    private void resetBox() {
        this.txtUserName.setText("");
        this.txtUserName.requestFocus();
        this.txtPwd.setText("");
        this.txtConfrim.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnAddNew = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnEdit = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnDelete = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnSearch = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jButton5 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jButton6 = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnUserPermission = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtPwd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtConfrim = new javax.swing.JTextField();
        chkIsActive = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnAddNew.setText("Add New");
        btnAddNew.setFocusable(false);
        btnAddNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddNew.setPreferredSize(new java.awt.Dimension(70, 20));
        btnAddNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAddNew);
        jToolBar1.add(jSeparator1);

        btnEdit.setText("Edit");
        btnEdit.setFocusable(false);
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEdit.setPreferredSize(new java.awt.Dimension(70, 20));
        btnEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEdit);
        jToolBar1.add(jSeparator3);

        btnDelete.setText("Delete");
        btnDelete.setFocusable(false);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setPreferredSize(new java.awt.Dimension(70, 20));
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDelete);
        jToolBar1.add(jSeparator4);

        btnSearch.setText("Search");
        btnSearch.setFocusable(false);
        btnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSearch.setPreferredSize(new java.awt.Dimension(70, 20));
        btnSearch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSearch);
        jToolBar1.add(jSeparator5);

        jButton5.setText("Export");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setPreferredSize(new java.awt.Dimension(70, 20));
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton5);
        jToolBar1.add(jSeparator6);

        jButton6.setText("Import");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setPreferredSize(new java.awt.Dimension(70, 20));
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton6);
        jToolBar1.add(jSeparator8);

        btnUserPermission.setText("User Permission");
        btnUserPermission.setFocusable(false);
        btnUserPermission.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUserPermission.setPreferredSize(new java.awt.Dimension(120, 20));
        btnUserPermission.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUserPermission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserPermissionActionPerformed(evt);
            }
        });
        jToolBar1.add(btnUserPermission);

        jLabel1.setText("User Name");

        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });

        txtPwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPwdActionPerformed(evt);
            }
        });

        jLabel2.setText("Password");

        jLabel3.setText("Confirm");

        txtConfrim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfrimActionPerformed(evt);
            }
        });

        chkIsActive.setText("Is Active");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(27, 27, 27)
                        .addComponent(txtPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkIsActive)
                            .addComponent(txtConfrim, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtConfrim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(chkIsActive)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setFont(new java.awt.Font("Geist Mono", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "UID", "User Name", "Password", "Is Active"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void txtPwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPwdActionPerformed

    private void txtConfrimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfrimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfrimActionPerformed
    CommonUtil common = new CommonUtil();
    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed
        // TODO add your handling code here:
        if (common.isTextEmpty(new JTextField[]{this.txtUserName, this.txtPwd, this.txtConfrim})) {
            return;
        }
        if (common.isNotMatch(this.txtPwd, this.txtConfrim, "Confirm Password is Not Match!")) {
            return;
        }
        try {
            UserDto usr = new UserDto();
            usr.setUname(this.txtUserName.getText());
            usr.setUpass(this.txtPwd.getText());
            usr.setIs_active(this.chkIsActive.isSelected());
            long uid = dao.addUser(usr);
            if (uid > 0) {
                //prepare object to add row
                DefaultTableModel tbl = (DefaultTableModel) this.jTable1.getModel();
                tbl.addRow(new Object[]{uid, txtUserName.getText(), txtPwd.getText(), chkIsActive.isSelected()});
                int idx = this.jTable1.getRowCount() - 1;
                this.jTable1.setRowSelectionInterval(idx, idx);
                //clear data
                this.resetBox();
            } else {
                JOptionPane.showMessageDialog(this, "Insert Failed!");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            if (this.jTable1.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "No record selected!");
                return;
            }
            int opt = JOptionPane.showConfirmDialog(this, "Are you sure to delete this record?", "Delete", JOptionPane.YES_NO_OPTION);
            if (opt == 0) {
                DefaultTableModel tbl = (DefaultTableModel) this.jTable1.getModel();
                int idx = this.jTable1.getSelectedRow();
                long uid = Long.valueOf(tbl.getValueAt(idx, 0).toString());
                if (dao.deleteUser(uid) == true) {
                    tbl.removeRow(idx);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel tbl = (DefaultTableModel) this.jTable1.getModel();
            if (tbl.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "No record selected!");
                return;
            }
            int idx = this.jTable1.getSelectedRow();

            if (btnEdit.getText().equals("Edit")) {
                this.txtUserName.setText(tbl.getValueAt(idx, 1).toString());
                this.txtPwd.setText(tbl.getValueAt(idx, 2).toString());
                this.txtConfrim.setText(tbl.getValueAt(idx, 2).toString());
                this.chkIsActive.setSelected((boolean) tbl.getValueAt(idx, 3));
                this.btnEdit.setText("Update");
                setEnableMenuButton(false);
                this.btnEdit.setEnabled(true);
            } else {
                UserDto newUser = new UserDto();
                newUser.setUid((long) tbl.getValueAt(idx, 0));
                newUser.setUname(this.txtUserName.getText());
                newUser.setUpass(this.txtPwd.getText());
                newUser.setIs_active(this.chkIsActive.isSelected());

                UserDto oldUser = new UserDto();
                oldUser.setUid((long) tbl.getValueAt(idx, 0));
                oldUser.setUname(tbl.getValueAt(idx, 1).toString());
                if (dao.updateUser(oldUser, newUser)) {
                    tbl.setValueAt(this.txtUserName.getText(), idx, 1);
                    tbl.setValueAt(this.txtPwd.getText(), idx, 2);
                    tbl.setValueAt(this.chkIsActive.isSelected(), idx, 3);

                    this.btnEdit.setText("Edit");
                    setEnableMenuButton(true);
                    this.btnEdit.setEnabled(true);
                    this.resetBox();
                } else {
                    JOptionPane.showMessageDialog(this, "Update not found!");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }


    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        try {
            SearchDialogFrm search = new SearchDialogFrm(null, true);
            search.setLocationRelativeTo(this);
            //add field to combox max
            search.loadBoxItemFields(new String[]{"ID", "Name"});
            search.setVisible(true);
            int ans = search.getReturnStatus();
            if (ans == 1)//user click ok
            {

                //get all user from table
                List<UserDto> result = new ArrayList<>();
//                    String keySearch=search.txtSearcyKeyValue.getText();
//                    switch(search.cboSearchField.getSelectedIndex())
//                    {
//                        case 0:
//                            result=dao.loadAllUsers();
//                            break;
//                        case 1:
//                            result=dao.searchById(Long.valueOf(keySearch));
//                            break;
//                        case 2:
//                            result=dao.searchByName(keySearch);
//                            break;
//                    }
//                    this.showUsers(result);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }


    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnUserPermissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserPermissionActionPerformed
        //TODO add your handling code here:
        // TODO add your handling code here:
//        if(this.jTable1.getSelectedRowCount()==0){
//            JOptionPane.showMessageDialog(this, "No record selected!");
//            return;
//        }
//        int curIdx=this.jTable1.getSelectedRow();
//        DefaultTableModel tbl=(DefaultTableModel)this.jTable1.getModel();
//        
//        
//        String uName=tbl.getValueAt(curIdx, 1).toString();
//        Long uid=Long.valueOf(tbl.getValueAt(curIdx, 0).toString());
//        
//        
//        UserPermissionFrm perm=new UserPermissionFrm(null,true);
//        perm.setLocationRelativeTo(this);
//        perm.uid=uid;
//        perm.uname=uName;
//        
//        Mainfrm mainfrm=new Mainfrm();
//        String[] menu=new String[mainfrm.getJMenuBar().getMenuCount()];
//        for(int i=0;i<=mainfrm.getJMenuBar().getMenuCount()-1;i++)
//        {
//            menu[i]=mainfrm.getJMenuBar().getMenu(i).getText();
//        }
//        perm.jmenuBar=mainfrm.getJMenuBar();
//        perm.loadTreeItems(uName,menu);
////        perm.jTree1.getSelectionRows();
//        perm.setVisible(true);


    }//GEN-LAST:event_btnUserPermissionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUserPermission;
    private javax.swing.JCheckBox chkIsActive;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField txtConfrim;
    private javax.swing.JTextField txtPwd;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
