
package ModulComponent.subComponent.Supplier;
import Logic.Vendor;

import ModulComponent.SupplierModul;
import java.awt.*;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.border.Border;
import javax.swing.BorderFactory;

public class VendorList extends javax.swing.JPanel {
    //Conection Database
    private static final String url = "jdbc:postgresql://localhost:5432/Inventory"; // Replace with your DB details
    private static final String user = "postgres"; // Replace with your DB username
    private static final String password = "dan@12345"; // Replace with your DB password
    
    Border textField_border = BorderFactory.createMatteBorder(0,0,2,0,Color.DARK_GRAY);
    int position = 0;
    public VendorList() {
        initComponents();
        
        jTextField_name.setBorder(textField_border);
        jTextField_city.setBorder(textField_border);
        jTextField_provine.setBorder(textField_border);
        jTextField_phone.setBorder(textField_border);
        jTextField_email.setBorder(textField_border);
        jTextField_addr.setBorder(textField_border);
        jLabel8.setVisible(false);
        
        showVendorInTabel();
    }
    // function that return an array list
    public ArrayList<Vendor> getVendorList()
    {
        ArrayList<Vendor> vendor_list  = new ArrayList<>();
        try (Connection connection = DriverManager.getConnection(url, user, password)){
            String query = "SELECT * FROM suppliers ORDER BY id DESC;";
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            Vendor vendor;
            
            while (rs.next()) {                
                vendor = new Vendor(rs.getInt("id"), 
                        rs.getString("name"), 
                        rs.getString("address"), 
                        rs.getString("city"), 
                        rs.getString("provine"), 
                        rs.getString("phone"),
                        rs.getString("email"));
                vendor_list.add(vendor);
            }
        } catch (Exception e) {
            Logger.getLogger(SupplierModul.class.getName()).log(Level.SEVERE, null, e);
        }
        return vendor_list;
    }
    //function show vendorlist into table
     public void showVendorInTabel()
    {
        ArrayList<Vendor> vendorList = getVendorList();
        DefaultTableModel model = (DefaultTableModel) jTable_vendorlist.getModel();
        model.setRowCount(0);
        Object[] row = new Object[7];
        
        for( int i = 0;i < vendorList.size();i++)
        {
            row[0] = vendorList.get(i).getId();
            row[1] = vendorList.get(i).getName();
            row[2] = vendorList.get(i).getAddress();
            row[3] = vendorList.get(i).getCity();
            row[4] = vendorList.get(i).getProvine();
            row[5] = vendorList.get(i).getPhone();
            row[6] = vendorList.get(i).getEmail();
            
            model.addRow(row);
            
        }
    }
    //funnction show data from database into textbox
    public void showVendorData(int index)
    {   
        jLabel8.setText(String.valueOf(getVendorList().get(index).getId()));
        jTextField_name.setText(getVendorList().get(index).getName());
        jTextField_addr.setText(getVendorList().get(index).getAddress());
        jTextField_city.setText(getVendorList().get(index).getCity());
        jTextField_provine.setText(getVendorList().get(index).getProvine());
        jTextField_phone.setText(getVendorList().get(index).getPhone());
        jTextField_email.setText(getVendorList().get(index).getEmail());
       
        
    }
    // function clearFields
     public void clearFields()
     {
         jTextField_name.setText("");
         jTextField_addr.setText("");
         jTextField_city.setText("");
         jTextField_provine.setText("");
         jTextField_phone.setText("");
         jTextField_email.setText("");
         
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_vendorlist = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField_name = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField_city = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_phone = new javax.swing.JTextField();
        jTextField_provine = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField_email = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField_addr = new javax.swing.JTextField();
        jButton_add = new javax.swing.JButton();
        jButton_update = new javax.swing.JButton();
        jButton_delete = new javax.swing.JButton();
        jButton_clearTextField = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton_last = new javax.swing.JButton();
        jButton_next = new javax.swing.JButton();
        jButton_first = new javax.swing.JButton();
        jButton_prev = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jTable_vendorlist.setBorder(null);
        jTable_vendorlist.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jTable_vendorlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Vendor Name", "Address", "City", "State/Province", "Phone", "Email"
            }
        ));
        jTable_vendorlist.setRowHeight(25);
        jTable_vendorlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_vendorlistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_vendorlist);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Vendors List");

        jTextField_name.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Vendor Name");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("City");

        jTextField_city.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("State/Province");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Phone");

        jTextField_phone.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        jTextField_provine.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Email");

        jTextField_email.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Address");

        jTextField_addr.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        jButton_add.setBackground(new java.awt.Color(102, 255, 102));
        jButton_add.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_add.setForeground(new java.awt.Color(0, 0, 0));
        jButton_add.setText("A");
        jButton_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addActionPerformed(evt);
            }
        });

        jButton_update.setBackground(new java.awt.Color(255, 204, 102));
        jButton_update.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_update.setForeground(new java.awt.Color(51, 51, 51));
        jButton_update.setText("E");
        jButton_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_updateMouseClicked(evt);
            }
        });
        jButton_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_updateActionPerformed(evt);
            }
        });

        jButton_delete.setBackground(new java.awt.Color(255, 51, 51));
        jButton_delete.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_delete.setForeground(new java.awt.Color(0, 0, 0));
        jButton_delete.setText("D");
        jButton_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_deleteMouseClicked(evt);
            }
        });

        jButton_clearTextField.setBackground(new java.awt.Color(204, 204, 255));
        jButton_clearTextField.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_clearTextField.setForeground(new java.awt.Color(0, 0, 0));
        jButton_clearTextField.setText("Clear");
        jButton_clearTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_clearTextFieldMouseClicked(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("ID");

        jButton_last.setBackground(new java.awt.Color(204, 204, 255));
        jButton_last.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_last.setForeground(new java.awt.Color(0, 0, 0));
        jButton_last.setText("Last");
        jButton_last.setPreferredSize(new java.awt.Dimension(76, 35));
        jButton_last.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_lastMouseClicked(evt);
            }
        });

        jButton_next.setBackground(new java.awt.Color(204, 204, 255));
        jButton_next.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_next.setForeground(new java.awt.Color(0, 0, 0));
        jButton_next.setText("Next");
        jButton_next.setPreferredSize(new java.awt.Dimension(76, 35));
        jButton_next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_nextMouseClicked(evt);
            }
        });

        jButton_first.setBackground(new java.awt.Color(204, 204, 255));
        jButton_first.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_first.setForeground(new java.awt.Color(0, 0, 0));
        jButton_first.setText("First");
        jButton_first.setPreferredSize(new java.awt.Dimension(76, 35));
        jButton_first.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_firstMouseClicked(evt);
            }
        });

        jButton_prev.setBackground(new java.awt.Color(204, 204, 255));
        jButton_prev.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_prev.setForeground(new java.awt.Color(0, 0, 0));
        jButton_prev.setText("Prev");
        jButton_prev.setMinimumSize(new java.awt.Dimension(76, 35));
        jButton_prev.setPreferredSize(new java.awt.Dimension(76, 35));
        jButton_prev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_prevMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jTextField_name, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_city, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_provine, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jTextField_email, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(79, 79, 79)
                                            .addComponent(jButton_first, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton_prev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton_next, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton_last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jTextField_addr, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton_add, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton_update, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 16, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_clearTextField)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButton_clearTextField))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jButton_first, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_prev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_next, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_provine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jTextField_addr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_add)
                    .addComponent(jButton_update)
                    .addComponent(jButton_delete))
                .addGap(2, 2, 2)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_updateActionPerformed

    private void jButton_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addActionPerformed
        // add vendor
        try {
            // Get input values
            String name = jTextField_name.getText().trim();
            String address = jTextField_addr.getText().trim();
            String city = jTextField_city.getText().trim();
            String province = jTextField_provine.getText();
            String phone = jTextField_phone.getText();
            String email = jTextField_email.getText();
            

            // Validate inputs
            if (name.isEmpty() || address.isEmpty() || phone.isEmpty() || city.isEmpty()) 
            {
                JOptionPane.showMessageDialog(null, "Please fill all required fields");
                return;
            }
            // Database operation
            try (Connection connection = DriverManager.getConnection(url, user, password)) {
                String sql = "INSERT INTO suppliers( name, address, city, provine, phone, email)VALUES (?, ?, ?, ?, ?, ?);";
                PreparedStatement ps = connection.prepareStatement(sql);
                ps.setString(1, name);
                ps.setString(2, address);
                ps.setString(3, city);
                ps.setString(4, province);
                ps.setString(5, phone);
                ps.setString(6, email);

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "New Product Added Successfully");
                    showVendorInTabel();
                    clearFields();
                } else {
                    System.out.println("Failed to add product");
                    JOptionPane.showMessageDialog(null, "Failed to add product");
                }
            } catch (SQLException e) {
                Logger.getLogger(SupplierModul.class.getName()).log(Level.SEVERE, null, e);
            }
        } catch (Exception e) {
            Logger.getLogger(SupplierModul.class.getName()).log(Level.SEVERE, null, e);
        }  
    }//GEN-LAST:event_jButton_addActionPerformed

    private void jButton_clearTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_clearTextFieldMouseClicked
        // clear button
        clearFields();
    }//GEN-LAST:event_jButton_clearTextFieldMouseClicked

    private void jButton_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_updateMouseClicked
        // Update Recored
        try {
            // Get input values
            Integer id = Integer.valueOf(jLabel8.getText());
            String name = jTextField_name.getText().trim();
            String address = jTextField_addr.getText().trim();
            String city = jTextField_city.getText().trim();
            String province = jTextField_provine.getText();
            String phone = jTextField_phone.getText();
            String email = jTextField_email.getText();
            

            // Validate inputs
            if (name.isEmpty() || address.isEmpty() || phone.isEmpty() || city.isEmpty()) 
            {
                JOptionPane.showMessageDialog(null, "Please fill all required fields");
                return;
            }
            // Database operation
            try (Connection connection = DriverManager.getConnection(url, user, password)) {
                String sql = "UPDATE suppliers SET  name=?, address=?, city=?, provine=?, phone=?, email=? WHERE id=?;";
                PreparedStatement ps = connection.prepareStatement(sql);
                ps.setString(1, name);
                ps.setString(2, address);
                ps.setString(3, city);
                ps.setString(4, province);
                ps.setString(5, phone);
                ps.setString(6, email);
                ps.setInt(7 ,id);

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Vendor Updated Successfully");
                    showVendorInTabel();
                    clearFields();
                } else {
                    System.out.println("Failed to update Vendor");
                    JOptionPane.showMessageDialog(null, "Failed to update Vendor");
                }
            } catch (SQLException e) {
                Logger.getLogger(SupplierModul.class.getName()).log(Level.SEVERE, null, e);
            }
        } catch (Exception e) {
            Logger.getLogger(SupplierModul.class.getName()).log(Level.SEVERE, null, e);
        }  
    }//GEN-LAST:event_jButton_updateMouseClicked

    private void jTable_vendorlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_vendorlistMouseClicked
        // display the select product to info
        int index = jTable_vendorlist.getSelectedRow();
        showVendorData(index);
        position = index;
    }//GEN-LAST:event_jTable_vendorlistMouseClicked

    private void jButton_deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_deleteMouseClicked
        // delete record by id
            // Get input values
            Integer id = Integer.valueOf(jLabel8.getText());
            // Database operation
            try (Connection connection = DriverManager.getConnection(url, user, password)) {
                String sql = "DELETE FROM suppliers WHERE id=?;";
                PreparedStatement ps = connection.prepareStatement(sql);
                ps.setInt(1 ,id);
                int confirm = JOptionPane.showConfirmDialog(null, "Are you sure to delete this Vendor","Remove Vendor",JOptionPane.YES_NO_OPTION);
                if(confirm == JOptionPane.YES_NO_OPTION)
                {
                    if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Vendor Deleted Successfully");
                    showVendorInTabel();
                    clearFields();
                    } else {
                        System.out.println("Failed to update Vendor");
                        JOptionPane.showMessageDialog(null, "Failed to Deleted Vendor");
                    }
                }
            } catch (SQLException e) {
                Logger.getLogger(SupplierModul.class.getName()).log(Level.SEVERE, null, e);
            }
    }//GEN-LAST:event_jButton_deleteMouseClicked

    private void jButton_lastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_lastMouseClicked
        // show and select last recode:
        position = getVendorList().size()-1;
        showVendorData(position);
        jTable_vendorlist.setRowSelectionInterval(position, position);
    }//GEN-LAST:event_jButton_lastMouseClicked

    private void jButton_nextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_nextMouseClicked
        // show and select next recode:
        position ++;
        if(position > getVendorList().size()-1)
        {
            position = getVendorList().size()-1;
        }
        showVendorData(position);
        jTable_vendorlist.setRowSelectionInterval(position, position);
    }//GEN-LAST:event_jButton_nextMouseClicked

    private void jButton_firstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_firstMouseClicked
        // show and select first recode:
        position = 0;
        showVendorData(position);
        jTable_vendorlist.setRowSelectionInterval(position, position);
    }//GEN-LAST:event_jButton_firstMouseClicked

    private void jButton_prevMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_prevMouseClicked
        // show and select previous recode:
        position --;
         if(position < 0)
        {
            position = 0;
        }
        showVendorData(position);
        jTable_vendorlist.setRowSelectionInterval(position, position);
    }//GEN-LAST:event_jButton_prevMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_add;
    private javax.swing.JButton jButton_clearTextField;
    private javax.swing.JButton jButton_delete;
    private javax.swing.JButton jButton_first;
    private javax.swing.JButton jButton_last;
    private javax.swing.JButton jButton_next;
    private javax.swing.JButton jButton_prev;
    private javax.swing.JButton jButton_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable_vendorlist;
    private javax.swing.JTextField jTextField_addr;
    private javax.swing.JTextField jTextField_city;
    private javax.swing.JTextField jTextField_email;
    private javax.swing.JTextField jTextField_name;
    private javax.swing.JTextField jTextField_phone;
    private javax.swing.JTextField jTextField_provine;
    // End of variables declaration//GEN-END:variables
}
