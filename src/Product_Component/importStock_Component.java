/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Product_Component;
import DTO.importProductDto;
import DAO.ImportProductDao;
import Database.DatabaseConfig;
import common.CommonUtil;   
import Product_Component.Dialog.SearchProductDialog;
import java.awt.Color;

import java.awt.Font;
import java.awt.HeadlessException;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.table.JTableHeader;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.awt.Component;
import java.awt.Image;
import java.awt.Window;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;



/**
 *
 * @author Da Phadenphorakden
 */
public class importStock_Component extends javax.swing.JPanel {

    /**
     * Creates new form importStock_Component
     */
    int position =0;
    ImportProductDao proDao = new ImportProductDao();
    public importStock_Component() {
        this.common = new CommonUtil();
        initComponents();
        showInTabel();
        txt_import_id.setEnabled(false);
        btn_update.setVisible(false);
        txt_product_name.setEnabled(false);
        txt_product_cate.setEnabled(false);
        

        // Create the desired font for the header
        JTableHeader header = tbl_import_stock.getTableHeader();
        Font headerFont = new Font("Century Gothic", Font.BOLD, 18); // Example: Bold, Size 14
        header.setFont(headerFont);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    //getData from database
    public List<importProductDto> getDataimProductDto() 
    {
        List<importProductDto> list = new ArrayList<importProductDto>();
        try{
            String sql = "SELECT id, product_id, name, category, quantity, cost, price, image\n" +
"	FROM public.view_stockin ORDER BY id DESC;";
            PreparedStatement pstmt = DatabaseConfig.getConnection().prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            importProductDto getdata;
            while (rs.next()) {                
                getdata = new importProductDto(
                        rs.getInt("id"),
                        rs.getString("name"), 
                        rs.getString("category"),
                        rs.getInt("quantity"),
                        rs.getDouble("cost"),
                        rs.getDouble("price"),
                        rs.getInt("product_id"),
                        rs.getString("image"));
                list.add(getdata);
            }
        } catch (Exception e) {
            Logger.getLogger(ProductModul.class.getName()).log(Level.SEVERE, null, e);
        }
        return list;
    }
    //show data to table
    public void showInTabel()
    {
        List<importProductDto> productsList = getDataimProductDto();
        DefaultTableModel model = (DefaultTableModel) tbl_import_stock.getModel();
        model.setRowCount(0);
        Object[] row = new Object[7];
        
        for( int i = 0;i < productsList.size();i++)
        {
            row[0] = productsList.get(i).getId();
            row[1] = productsList.get(i).getProduct_id();
            row[2] = productsList.get(i).getName();
            row[3] = productsList.get(i).getCategory();
            row[4] = productsList.get(i).getQty();
            row[5] = productsList.get(i).getCost();
            row[6] = productsList.get(i).getPrice();
            
            model.addRow(row);
            
        }
    }
    // Select data on Table
    public void selectOnTable(int index){
        txt_import_id.setText(String.valueOf(getDataimProductDto().get(index).getId()));
        txt_product_name.setText(String.valueOf(getDataimProductDto().get(index).getName()));
        txt_product_cate.setText(String.valueOf(getDataimProductDto().get(index).getCategory()));
        txt_product_qty.setText(String.valueOf(getDataimProductDto().get(index).getQty()));
        txt_product_cost.setText(String.valueOf(getDataimProductDto().get(index).getCost()));
        txt_product_price.setText(String.valueOf(getDataimProductDto().get(index).getPrice()));
        txt_product_id.setText(String.valueOf(getDataimProductDto().get(index).getProduct_id()));
        displayimg(getDataimProductDto().get(index).getImage(), label_displayImage);
    }
    // function display image
    public void displayimg (String ImgPath,JLabel label){
        ImageIcon imgIco = new ImageIcon(ImgPath);
        Image img = imgIco.getImage().getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
        label.setIcon(new ImageIcon(img));
    }
    public void resetForm(){
        txt_import_id.setText("");
        txt_product_id.setText("");
        txt_product_name.setText("");
        txt_product_cate.setText("");
        txt_product_qty.setText("");
        txt_product_cost.setText("");
        txt_product_price.setText("");
        label_displayImage.setIcon( null);
    }
    private void showKhmerMessageDialog(Component parent, String message, String title, int messageType) {
        // Set Khmer font (e.g., "Khmer OS" or another installed Khmer font)
        Font khmerFont = new Font("Khmer OS", Font.PLAIN, 16);

        // Create a JLabel with the message and Khmer font
        JLabel messageLabel = new JLabel(message);
        messageLabel.setFont(khmerFont);

        // Show the JOptionPane with the custom label
        JOptionPane.showMessageDialog(parent, messageLabel, title, messageType);
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel5 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btn_stored = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btn_edit = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        btn_delete = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        import_btn_search = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        btn_first = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btn_prev = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        btn_next = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        btn_last = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        btn_last1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_import_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_product_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_product_cate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_product_qty = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_product_cost = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_product_price = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        label_displayImage = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_product_id = new javax.swing.JTextField();
        btn_reset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_import_stock = new javax.swing.JTable();

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jLabel5.setFont(new java.awt.Font("Geist Mono", 1, 24)); // NOI18N
        jLabel5.setText("Import Stock");
        jToolBar1.add(jLabel5);

        jSeparator3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jSeparator3.setEnabled(false);
        jSeparator3.setSeparatorSize(new java.awt.Dimension(40, 10));
        jToolBar1.add(jSeparator3);

        btn_stored.setFont(new java.awt.Font("Geist Mono", 1, 14)); // NOI18N
        btn_stored.setText("Add");
        btn_stored.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_stored.setFocusable(false);
        btn_stored.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_stored.setPreferredSize(new java.awt.Dimension(70, 28));
        btn_stored.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_stored.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_storedActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_stored);
        jToolBar1.add(jSeparator2);

        btn_edit.setFont(new java.awt.Font("Geist Mono", 1, 14)); // NOI18N
        btn_edit.setText("Edit");
        btn_edit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_edit.setFocusable(false);
        btn_edit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_edit.setPreferredSize(new java.awt.Dimension(70, 28));
        btn_edit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_edit);

        btn_update.setFont(new java.awt.Font("Geist Mono", 1, 14)); // NOI18N
        btn_update.setText("Update");
        btn_update.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_update.setFocusable(false);
        btn_update.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_update.setPreferredSize(new java.awt.Dimension(70, 28));
        btn_update.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_update);
        jToolBar1.add(jSeparator6);

        btn_delete.setFont(new java.awt.Font("Geist Mono", 1, 14)); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_delete.setFocusable(false);
        btn_delete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_delete.setPreferredSize(new java.awt.Dimension(70, 28));
        btn_delete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_delete);
        jToolBar1.add(jSeparator5);

        import_btn_search.setFont(new java.awt.Font("Geist Mono", 1, 14)); // NOI18N
        import_btn_search.setText("Search");
        import_btn_search.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        import_btn_search.setFocusable(false);
        import_btn_search.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        import_btn_search.setPreferredSize(new java.awt.Dimension(70, 28));
        import_btn_search.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        import_btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                import_btn_searchActionPerformed(evt);
            }
        });
        jToolBar1.add(import_btn_search);

        jSeparator9.setEnabled(false);
        jSeparator9.setSeparatorSize(new java.awt.Dimension(200, 10));
        jToolBar1.add(jSeparator9);

        btn_first.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btn_first.setText("First");
        btn_first.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_first.setFocusable(false);
        btn_first.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_first.setPreferredSize(new java.awt.Dimension(70, 28));
        btn_first.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_firstActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_first);
        jToolBar1.add(jSeparator8);

        btn_prev.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btn_prev.setText("Prev");
        btn_prev.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_prev.setFocusable(false);
        btn_prev.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_prev.setPreferredSize(new java.awt.Dimension(70, 28));
        btn_prev.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_prev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_prevMouseClicked(evt);
            }
        });
        btn_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prevActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_prev);
        jToolBar1.add(jSeparator7);

        btn_next.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btn_next.setText("Next");
        btn_next.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_next.setFocusable(false);
        btn_next.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_next.setMinimumSize(new java.awt.Dimension(56, 31));
        btn_next.setPreferredSize(new java.awt.Dimension(70, 28));
        btn_next.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_nextMouseClicked(evt);
            }
        });
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_next);
        jToolBar1.add(jSeparator10);

        btn_last.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btn_last.setText("Last");
        btn_last.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_last.setFocusable(false);
        btn_last.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_last.setPreferredSize(new java.awt.Dimension(70, 28));
        btn_last.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_last.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_lastMouseClicked(evt);
            }
        });
        btn_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lastActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_last);

        jSeparator11.setEnabled(false);
        jSeparator11.setSeparatorSize(new java.awt.Dimension(200, 10));
        jToolBar1.add(jSeparator11);

        btn_last1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btn_last1.setText("Report");
        btn_last1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_last1.setFocusable(false);
        btn_last1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_last1.setPreferredSize(new java.awt.Dimension(70, 28));
        btn_last1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_last1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_last1MouseClicked(evt);
            }
        });
        btn_last1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_last1ActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_last1);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N
        jLabel1.setText("Import ID:");

        txt_import_id.setEditable(false);
        txt_import_id.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N
        jLabel2.setText("Product Name:");

        txt_product_name.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N
        jLabel3.setText("Product Cate:");

        txt_product_cate.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N
        jLabel4.setText("Product Qty:");

        txt_product_qty.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N
        jLabel6.setText("Product Cost:");

        txt_product_cost.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N
        jLabel7.setText("Sale Price:");

        txt_product_price.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N
        jLabel8.setText("Iamge:");

        label_displayImage.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Image"));

        jLabel9.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N
        jLabel9.setText("Product ID:");

        txt_product_id.setFont(new java.awt.Font("Geist Mono", 0, 18)); // NOI18N

        btn_reset.setFont(new java.awt.Font("Geist Mono", 1, 14)); // NOI18N
        btn_reset.setText("Reset");
        btn_reset.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_reset.setFocusable(false);
        btn_reset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_reset.setPreferredSize(new java.awt.Dimension(70, 28));
        btn_reset.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addGap(238, 238, 238))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_reset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(label_displayImage, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(txt_product_id, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txt_product_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txt_product_cate, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txt_product_name, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txt_import_id, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addComponent(txt_product_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_product_price, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_reset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_import_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_product_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_product_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_product_cate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_product_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_product_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_product_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(label_displayImage, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        tbl_import_stock.setFont(new java.awt.Font("Geist Mono", 0, 14)); // NOI18N
        tbl_import_stock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Import_ID", "Product ID", "Product Name", "Product Cate", "Product Qty", "Product Cost", "Product Price"
            }
        ));
        tbl_import_stock.setRowHeight(25);
        jScrollPane1.setViewportView(tbl_import_stock);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1486, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1087, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void import_btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_import_btn_searchActionPerformed
    //Sreach by Import_ID Product_id product_Name
        if(this.txt_product_id.getText().equals(""))
            {
                this.txt_product_id.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Product ID must be exist!", "Invalid Data", HEIGHT);
                this.txt_product_id.setBackground(Color.white);
                txt_product_id.requestFocus();
                return;
            }

        DefaultTableModel tbl = (DefaultTableModel) this.tbl_import_stock.getModel();
        boolean found = false;

        this.tbl_import_stock.clearSelection(); // Clear any previous selections

        for (int i = 0; i < tbl.getRowCount(); i++) {
            if (tbl.getValueAt(i, 1).toString().equals(this.txt_product_id.getText().trim())) {
                this.tbl_import_stock.addRowSelectionInterval(i, i); // Highlight each matching row
                if (!found) {
                    this.tbl_import_stock.scrollRectToVisible(this.tbl_import_stock.getCellRect(i, 0, true)); // Scroll to first match
                }
                found = true;
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(this, "Product ID not found!", "Search Result", JOptionPane.WARNING_MESSAGE);
            txt_product_id.requestFocus();
        }
    }//GEN-LAST:event_import_btn_searchActionPerformed

    private CommonUtil common;
    private void btn_storedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_storedActionPerformed
        // Stored
        try {
            
            Integer product_id = Integer.valueOf(txt_product_id.getText());
            Integer qty = Integer.valueOf(txt_product_qty.getText());
            Double cost = Double.valueOf(txt_product_cost.getText());
            Double price = Double.valueOf(txt_product_price.getText());
            //Validation
//            if(getCommon().isTextEmpty(new JTextField[]{this.txt_product_id,this.txt_product_cost,this.txt_product_price,this.txt_product_qty}))
//            {
//                this.txt_product_id.setBackground(Color.red);
//                return ;
//            }
            if (txt_product_id.getText().equals("")) {
                this.txt_product_id.setBackground(Color.red);
            }
            // Database operation
            try{
                String sql = "INSERT INTO stockin(product_id,quantity, cost, price)VALUES ( ?, ?, ?, ?);";
                PreparedStatement pstmt = DatabaseConfig.getConnection().prepareStatement(sql);
                pstmt.setInt(1, product_id);
                pstmt.setInt(2,qty);
                pstmt.setDouble(3, cost);
                pstmt.setDouble(4, price);

                if (pstmt.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "New Product Added Successfully");
                    showInTabel();
                    resetForm();
                } else {
                    System.out.println("Failed to add product");
                    JOptionPane.showMessageDialog(null, "Failed to add product");
                }
            } catch (SQLException e) {
                Logger.getLogger(importStock_Component.class.getName()).log(Level.SEVERE, null, e);
            }
        } catch (HeadlessException | NumberFormatException e) {
            Logger.getLogger(importStock_Component.class.getName()).log(Level.SEVERE, null, e);
           
            JOptionPane.showMessageDialog(null, "Input Field Reuire");
        }    
    }//GEN-LAST:event_btn_storedActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        // Edit
        
        int index = tbl_import_stock.getSelectedRow();
        if(index == tbl_import_stock.getSelectedRow()){
            
            selectOnTable(index);
            
            btn_stored.setEnabled(false);
            btn_stored.setText("");

            btn_delete.setEnabled(false);
            btn_delete.setText("");

            import_btn_search.setEnabled(false);
            import_btn_search.setText("");

            btn_edit.setVisible(false);
            btn_update.setVisible(true);

            tbl_import_stock.setEnabled(false);
        }   
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // Update
        btn_edit.setVisible(true);
        btn_update.setVisible(false);
        
        btn_stored.setEnabled(true);
        btn_stored.setText("Add New");
        
        btn_delete.setEnabled(true);
        btn_delete.setText("Delete");
        
        tbl_import_stock.setEnabled(true);
        
        import_btn_search.setEnabled(true);
        import_btn_search.setText("Search");
        
        try {
            Integer import_id = Integer.valueOf(txt_import_id.getText());
            Integer product_id = Integer.valueOf(txt_product_id.getText());
            Integer qty = Integer.valueOf(txt_product_qty.getText());
            Double cost = Double.valueOf(txt_product_cost.getText());
            Double price = Double.valueOf(txt_product_price.getText());
            
            //Validation
            if(getCommon().isTextEmpty(new JTextField[]{this.txt_product_id,this.txt_product_cost,this.txt_product_price,this.txt_product_qty}))
            {
                return;
            }
            // Database Operation
            String sql = "UPDATE public.stockin SET quantity=?, cost=?, price=?, product_id=? WHERE id = ?;";
                PreparedStatement pstmt = DatabaseConfig.getConnection().prepareStatement(sql);
                pstmt.setInt(1,qty);
                pstmt.setDouble(2, cost);
                pstmt.setDouble(3, price);
                pstmt.setInt(4, product_id);
                pstmt.setInt(5, import_id);

                if (pstmt.executeUpdate() > 0) {
                    System.out.println("Product Updated");
                    //JOptionPane.showMessageDialog(null, "Product Updated Successfully");
                    showKhmerMessageDialog(null, "ផលិតផលបានធ្វើបច្ចុប្បន្នភាពជោគជ័យ!", "ជោគជ័យ", JOptionPane.INFORMATION_MESSAGE);
                    showInTabel();
                    resetForm();
                } else {
                    System.out.println("Failed to Updated Product");
                    JOptionPane.showMessageDialog(null, "Failed to Updated Product");
                }
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        // TODO add your handling code here:
        resetForm();
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        //Delete
        int index = tbl_import_stock.getSelectedRow();
//        txt_import_id.setText(String.valueOf(getDataimProductDto().get(index).getId()));
        Integer id = getDataimProductDto().get(index).getId();
        
        try {
            String sql = "DELETE FROM public.stockin WHERE id=?;";
            PreparedStatement pstmt = DatabaseConfig.getConnection().prepareStatement(sql);
            pstmt.setInt(1, id);
                int confirm = JOptionPane.showConfirmDialog(null, "Are you sure to delete this product","Remove Product",JOptionPane.YES_NO_OPTION);
                
                if (confirm == JOptionPane.YES_NO_OPTION) 
                {
                    if (pstmt.executeUpdate() > 0) {
                    System.out.println("Product deleted");
//                    JOptionPane.showConfirmDialog(null, "Product Deleted Successfully", "Remove Product", JOptionPane.INFORMATION_MESSAGE);
                    showInTabel();
                    resetForm();
                    } else {
                        JOptionPane.showConfirmDialog(null, "Product Not Delete, Make Sure The ID is valid", "Remove Product", JOptionPane.ERROR_MESSAGE);
                    }
                }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showConfirmDialog(null, "Product Not Delete, Make Sure The ID is valid", "Remove Product", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_firstActionPerformed
        //        // show and select first recode:
        position = 0;

        tbl_import_stock.setRowSelectionInterval(position, position);
    }//GEN-LAST:event_btn_firstActionPerformed

    private void btn_prevMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_prevMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_prevMouseClicked

    private void btn_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prevActionPerformed
        // show and select previous recode:
        position --;
        if(position < 0)
        {
            position = 0;

            JOptionPane.showMessageDialog(null, "អស់ហើយចុចអីទៀត");
        }

        tbl_import_stock.setRowSelectionInterval(position, position);
    }//GEN-LAST:event_btn_prevActionPerformed

    private void btn_nextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_nextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_nextMouseClicked

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        // show and select next recode:
        position ++;
        if(position > getDataimProductDto().size()-1)
        {
            position = getDataimProductDto().size()-1;
            JOptionPane.showMessageDialog(null, "អស់ហើយចុចអីទៀត");
        }

        tbl_import_stock.setRowSelectionInterval(position, position);
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_lastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_lastMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_lastMouseClicked

    private void btn_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lastActionPerformed
        //        // show and select last recode:
        position = getDataimProductDto().size()-1;

        tbl_import_stock.setRowSelectionInterval(position, position);
    }//GEN-LAST:event_btn_lastActionPerformed

    private void btn_last1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_last1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_last1MouseClicked

    private void btn_last1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_last1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_last1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_first;
    private javax.swing.JButton btn_last;
    private javax.swing.JButton btn_last1;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_prev;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_stored;
    private javax.swing.JButton btn_update;
    private javax.swing.JButton import_btn_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel label_displayImage;
    private javax.swing.JTable tbl_import_stock;
    private javax.swing.JTextField txt_import_id;
    private javax.swing.JTextField txt_product_cate;
    private javax.swing.JTextField txt_product_cost;
    private javax.swing.JTextField txt_product_id;
    private javax.swing.JTextField txt_product_name;
    private javax.swing.JTextField txt_product_price;
    private javax.swing.JTextField txt_product_qty;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the common
     */
    public CommonUtil getCommon() {
        return common;
    }

    /**
     * @param common the common to set
     */
    public void setCommon(CommonUtil common) {
        this.common = common;
    }
}
